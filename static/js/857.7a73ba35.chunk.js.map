{"version":3,"file":"static/js/857.7a73ba35.chunk.js","mappings":"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","sources":["views/Profile/ManageProfile.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Avatar,\n  IconButton,\n  Grid,\n  Divider,\n  InputAdornment,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport {\n  Edit as EditIcon,\n  Person as PersonIcon,\n  Phone as PhoneIcon,\n  Cake as CakeIcon,\n  Home as HomeIcon,\n  Email as EmailIcon,\n  PhotoCamera as PhotoCameraIcon,\n} from \"@mui/icons-material\";\n\n// Import default avatar\nimport defaultAvatar from \"../../assets/images/profile-default.jpg\";\n\nconst ManageProfile = () => {\n  const [profile, setProfile] = useState(() => {\n    const savedProfile = localStorage.getItem('userProfile');\n    return savedProfile ? JSON.parse(savedProfile) : {\n      firstName: \"John\",\n      lastName: \"Doe\",\n      email: \"john.doe@example.com\",\n      phone: \"+212 666-666666\",\n      birthDate: \"1990-01-01\",\n      address: \"123 Rue Mohammed V, Casablanca\",\n      avatar: defaultAvatar,\n    };\n  });\n\n  const [editedProfile, setEditedProfile] = useState({...profile});\n  const [isEditing, setIsEditing] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const theme = {\n    primary: \"#F4E029\",\n    secondary: \"#060B47\",\n    accent: \"#FF1F44\",\n    background: \"#FFFFFF\",\n    text: \"#000000\",\n    success: \"#4CAF50\",\n  };\n\n  const handleChange = (field) => (event) => {\n    setEditedProfile({\n      ...editedProfile,\n      [field]: event.target.value\n    });\n  };\n\n  const handleSave = () => {\n    try {\n      setProfile(editedProfile);\n      localStorage.setItem('userProfile', JSON.stringify(editedProfile));\n      setIsEditing(false);\n      setOpenSnackbar(true);\n    } catch (error) {\n      console.error('Erreur lors de la sauvegarde:', error);\n      alert('Une erreur est survenue lors de la sauvegarde du profil');\n    }\n  };\n\n  const handleCancel = () => {\n    setEditedProfile({...profile});\n    setIsEditing(false);\n  };\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const updatedProfile = {\n          ...profile,\n          avatar: reader.result\n        };\n        setProfile(updatedProfile);\n        setEditedProfile(updatedProfile);\n        localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleEditClick = () => {\n    setEditedProfile({...profile});\n    setIsEditing(true);\n  };\n\n  return (\n    <Box\n      sx={{\n        p: 3,\n        ml: \"220px\",\n        width: \"calc(100% - 220px)\",\n        backgroundColor: \"#f5f5f5\",\n        minHeight: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        pt: 5,\n      }}\n    >\n      <Paper\n        elevation={6}\n        sx={{\n          width: \"100%\",\n          maxWidth: 800,\n          p: 4,\n          borderRadius: 3,\n          backgroundColor: theme.background,\n        }}\n      >\n        {/* Header with Avatar */}\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            mb: 4,\n          }}\n        >\n          <Box sx={{ position: \"relative\" }}>\n            <Avatar\n              src={profile.avatar}\n              sx={{\n                width: 150,\n                height: 150,\n                border: `4px solid ${theme.primary}`,\n                boxShadow: \"0 4px 10px rgba(0,0,0,0.1)\",\n              }}\n            />\n            <input\n              accept=\"image/*\"\n              type=\"file\"\n              id=\"avatar-upload\"\n              hidden\n              onChange={handleImageUpload}\n            />\n            <label htmlFor=\"avatar-upload\">\n              <IconButton\n                component=\"span\"\n                sx={{\n                  position: \"absolute\",\n                  bottom: 0,\n                  right: 0,\n                  bgcolor: theme.secondary,\n                  color: \"white\",\n                  \"&:hover\": {\n                    bgcolor: theme.accent,\n                  },\n                }}\n              >\n                <PhotoCameraIcon />\n              </IconButton>\n            </label>\n          </Box>\n          <Typography\n            variant=\"h4\"\n            sx={{\n              mt: 2,\n              color: theme.secondary,\n              fontWeight: \"bold\",\n            }}\n          >\n            Mon Profil\n          </Typography>\n        </Box>\n\n        <Divider sx={{ mb: 4 }} />\n\n        {/* Profile Form */}\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Prénom\"\n              value={isEditing ? editedProfile.firstName : profile.firstName}\n              onChange={handleChange('firstName')}\n              disabled={!isEditing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon sx={{ color: theme.secondary }} />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  \"&.Mui-focused fieldset\": {\n                    borderColor: theme.secondary,\n                  },\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Nom\"\n              value={isEditing ? editedProfile.lastName : profile.lastName}\n              onChange={handleChange('lastName')}\n              disabled={!isEditing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon sx={{ color: theme.secondary }} />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  \"&.Mui-focused fieldset\": {\n                    borderColor: theme.secondary,\n                  },\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Email\"\n              value={isEditing ? editedProfile.email : profile.email}\n              onChange={handleChange('email')}\n              disabled={!isEditing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <EmailIcon sx={{ color: theme.secondary }} />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  \"&.Mui-focused fieldset\": {\n                    borderColor: theme.secondary,\n                  },\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Téléphone\"\n              value={isEditing ? editedProfile.phone : profile.phone}\n              onChange={handleChange('phone')}\n              disabled={!isEditing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PhoneIcon sx={{ color: theme.secondary }} />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  \"&.Mui-focused fieldset\": {\n                    borderColor: theme.secondary,\n                  },\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Date de naissance\"\n              type=\"date\"\n              value={isEditing ? editedProfile.birthDate : profile.birthDate}\n              onChange={handleChange('birthDate')}\n              disabled={!isEditing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <CakeIcon sx={{ color: theme.secondary }} />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  \"&.Mui-focused fieldset\": {\n                    borderColor: theme.secondary,\n                  },\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              fullWidth\n              label=\"Adresse\"\n              value={isEditing ? editedProfile.address : profile.address}\n              onChange={handleChange('address')}\n              disabled={!isEditing}\n              multiline\n              rows={2}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <HomeIcon sx={{ color: theme.secondary }} />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{\n                \"& .MuiOutlinedInput-root\": {\n                  \"&.Mui-focused fieldset\": {\n                    borderColor: theme.secondary,\n                  },\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n\n        {/* Action Buttons */}\n        <Box sx={{ mt: 4, display: \"flex\", gap: 2, justifyContent: \"center\" }}>\n          {!isEditing ? (\n            <Button\n              variant=\"contained\"\n              startIcon={<EditIcon />}\n              onClick={handleEditClick}\n              sx={{\n                bgcolor: theme.primary,\n                color: theme.text,\n                px: 4,\n                py: 1.5,\n                \"&:hover\": {\n                  bgcolor: theme.secondary,\n                  color: \"white\",\n                },\n              }}\n            >\n              Modifier le profil\n            </Button>\n          ) : (\n            <>\n              <Button\n                variant=\"outlined\"\n                onClick={handleCancel}\n                sx={{\n                  color: theme.text,\n                  borderColor: theme.secondary,\n                  px: 4,\n                  py: 1.5,\n                  \"&:hover\": {\n                    borderColor: theme.accent,\n                  },\n                }}\n              >\n                Annuler\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={handleSave}\n                sx={{\n                  bgcolor: theme.primary,\n                  color: theme.text,\n                  px: 4,\n                  py: 1.5,\n                  \"&:hover\": {\n                    bgcolor: theme.secondary,\n                    color: \"white\",\n                  },\n                }}\n              >\n                Enregistrer\n              </Button>\n            </>\n          )}\n        </Box>\n\n        {/* Success Snackbar */}\n        <Snackbar\n          open={openSnackbar}\n          autoHideDuration={6000}\n          onClose={() => setOpenSnackbar(false)}\n        >\n          <Alert\n            onClose={() => setOpenSnackbar(false)}\n            severity=\"success\"\n            sx={{ width: \"100%\" }}\n          >\n            Profil mis à jour avec succès!\n          </Alert>\n        </Snackbar>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default ManageProfile; "],"names":["ManageProfile","profile","setProfile","useState","savedProfile","localStorage","getItem","JSON","parse","firstName","lastName","email","phone","birthDate","address","avatar","defaultAvatar","editedProfile","setEditedProfile","isEditing","setIsEditing","openSnackbar","setOpenSnackbar","theme","handleChange","field","event","target","value","_jsx","Box","sx","p","ml","width","backgroundColor","minHeight","display","justifyContent","alignItems","pt","children","_jsxs","Paper","elevation","maxWidth","borderRadius","flexDirection","mb","position","Avatar","src","height","border","boxShadow","accept","type","id","hidden","onChange","file","files","reader","FileReader","onloadend","updatedProfile","result","setItem","stringify","readAsDataURL","htmlFor","IconButton","component","bottom","right","bgcolor","color","PhotoCameraIcon","Typography","variant","mt","fontWeight","Divider","Grid","container","spacing","item","xs","sm","TextField","fullWidth","label","disabled","InputProps","startAdornment","InputAdornment","PersonIcon","borderColor","EmailIcon","PhoneIcon","CakeIcon","multiline","rows","HomeIcon","gap","_Fragment","Button","onClick","handleCancel","px","py","handleSave","error","console","alert","startIcon","EditIcon","handleEditClick","Snackbar","open","autoHideDuration","onClose","Alert","severity"],"sourceRoot":""}