{"version":3,"file":"static/js/455.dde30d05.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","noop","any","transformPropOrder","transformProps","positionalKeys","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion","createDomVisualElement"],"sourceRoot":""}