{"version":3,"file":"static/js/100.b8dfd346.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/Block.js","views/Organizer/ManageOrganizers.jsx","../node_modules/@mui/icons-material/Email.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../node_modules/@mui/icons-material/Phone.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2M4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9C4.63 15.55 4 13.85 4 12m8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8\"\n}), 'Block');","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Grid,\n  Typography,\n  Paper,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\nimport BlockIcon from \"@mui/icons-material/Block\";\nimport EmailIcon from \"@mui/icons-material/Email\";\nimport PhoneIcon from \"@mui/icons-material/Phone\";\n\n// Import sample logos\nimport logo1 from \"../../assets/images/organizer-1.jpg\";\nimport logo2 from \"../../assets/images/organizer-2.jpg\";\nimport logo3 from \"../../assets/images/organizer-3.jpg\";\n\nconst ManageOrganizers = () => {\n  const [openEmailDialog, setOpenEmailDialog] = useState(false);\n  const [openBlockDialog, setOpenBlockDialog] = useState(false);\n  const [selectedOrganizer, setSelectedOrganizer] = useState(null);\n  const [emailContent, setEmailContent] = useState({\n    subject: \"\",\n    message: \"\",\n  });\n  const [organizers, setOrganizers] = useState([\n    {\n      id: 1,\n      name: \"EventPro Morocco\",\n      logo: logo1,\n      email: \"contact@eventpro.ma\",\n      phone: \"+212 522-123456\",\n      isBlocked: false,\n    },\n    {\n      id: 2,\n      name: \"Festival Management\",\n      logo: logo2,\n      email: \"info@festivalmanagement.ma\",\n      phone: \"+212 537-789012\",\n      isBlocked: false,\n    },\n    {\n      id: 3,\n      name: \"Concerts & Shows\",\n      logo: logo3,\n      email: \"booking@concertshows.ma\",\n      phone: \"+212 539-345678\",\n      isBlocked: true,\n    },\n  ]);\n\n  useEffect(() => {\n    // Charger les organisateurs depuis le localStorage s'ils existent\n    const storedOrganizers = localStorage.getItem('organizers');\n    if (storedOrganizers) {\n      setOrganizers(JSON.parse(storedOrganizers));\n    } else {\n      // Si pas d'organisateurs stockés, sauvegarder les organisateurs par défaut\n      localStorage.setItem('organizers', JSON.stringify(organizers));\n    }\n  }, []);\n\n  const handleEmailClick = (organizer) => {\n    setSelectedOrganizer(organizer);\n    setOpenEmailDialog(true);\n  };\n\n  const handleBlockClick = (organizer) => {\n    setSelectedOrganizer(organizer);\n    setOpenBlockDialog(true);\n  };\n\n  const handleSendEmail = () => {\n    console.log(\"Sending email to:\", selectedOrganizer.email, emailContent);\n    setOpenEmailDialog(false);\n    setEmailContent({ subject: \"\", message: \"\" });\n  };\n\n  const handleBlock = () => {\n    const updatedOrganizers = organizers.map(org => {\n      if (org.id === selectedOrganizer.id) {\n        return { ...org, isBlocked: !org.isBlocked };\n      }\n      return org;\n    });\n\n    setOrganizers(updatedOrganizers);\n    localStorage.setItem('organizers', JSON.stringify(updatedOrganizers));\n    setOpenBlockDialog(false);\n    setSelectedOrganizer(null);\n  };\n\n  return (\n    <Box\n      sx={{\n        p: 3,\n        ml: \"220px\",\n        width: \"calc(100% - 220px)\",\n        backgroundColor: \"#FFFFFF\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <Typography\n        variant=\"h4\"\n        sx={{\n          color: \"#000000\",\n          fontWeight: \"bold\",\n          mb: 4,\n          textAlign: \"center\",\n        }}\n      >\n        Gérer les Organisateurs\n      </Typography>\n\n      <Grid container spacing={3}>\n        {organizers.map((organizer) => (\n          <Grid item xs={12} key={organizer.id}>\n            <Paper\n              elevation={3}\n              sx={{\n                p: 2,\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 2,\n                borderRadius: 2,\n                transition: \"transform 0.2s ease-in-out\",\n                \"&:hover\": {\n                  transform: \"translateY(-3px)\",\n                  boxShadow: \"0 4px 20px rgba(0,0,0,0.1)\",\n                },\n                border: organizer.isBlocked ? \"2px solid #FF1F44\" : \"none\",\n              }}\n            >\n              {/* Organizer Logo */}\n              <img\n                src={organizer.logo}\n                alt={organizer.name}\n                style={{\n                  width: \"100px\",\n                  height: \"100px\",\n                  objectFit: \"cover\",\n                  borderRadius: \"50%\",\n                }}\n              />\n\n              {/* Organizer Details */}\n              <Box sx={{ flex: 1 }}>\n                <Typography\n                  variant=\"h6\"\n                  sx={{\n                    fontWeight: \"bold\",\n                    mb: 1,\n                  }}\n                >\n                  {organizer.name}\n                  {organizer.isBlocked && (\n                    <Typography\n                      component=\"span\"\n                      sx={{\n                        color: \"#FF1F44\",\n                        ml: 2,\n                        fontSize: \"0.9rem\",\n                      }}\n                    >\n                      (Bloqué)\n                    </Typography>\n                  )}\n                </Typography>\n\n                <Box sx={{ display: \"flex\", gap: 4, mb: 1 }}>\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                    <EmailIcon sx={{ color: \"#1E90FF\" }} />\n                    <Typography variant=\"body2\">{organizer.email}</Typography>\n                  </Box>\n\n                  <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                    <PhoneIcon sx={{ color: \"#1E90FF\" }} />\n                    <Typography variant=\"body2\">{organizer.phone}</Typography>\n                  </Box>\n                </Box>\n              </Box>\n\n              {/* Action Buttons */}\n              <Box sx={{ display: \"flex\", gap: 2 }}>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<EmailIcon />}\n                  onClick={() => handleEmailClick(organizer)}\n                  sx={{\n                    bgcolor: \"#1976D2\",\n                    color: \"#fff\",\n                    \"&:hover\": {\n                      bgcolor: \"#1565C0\",\n                    },\n                  }}\n                >\n                  Email\n                </Button>\n\n                <Button\n                  variant=\"contained\"\n                  startIcon={<BlockIcon />}\n                  onClick={() => handleBlockClick(organizer)}\n                  sx={{\n                    bgcolor: organizer.isBlocked ? \"#4CAF50\" : \"#FF1F44\",\n                    color: \"#fff\",\n                    \"&:hover\": {\n                      bgcolor: organizer.isBlocked ? \"#43A047\" : \"#E61B3D\",\n                    },\n                  }}\n                >\n                  {organizer.isBlocked ? \"Débloquer\" : \"Bloquer\"}\n                </Button>\n              </Box>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* Email Dialog */}\n      <Dialog\n        open={openEmailDialog}\n        onClose={() => setOpenEmailDialog(false)}\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        <DialogTitle>Envoyer un Email à {selectedOrganizer?.name}</DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            label=\"Sujet\"\n            value={emailContent.subject}\n            onChange={(e) =>\n              setEmailContent((prev) => ({ ...prev, subject: e.target.value }))\n            }\n            sx={{ mt: 2, mb: 2 }}\n          />\n          <TextField\n            fullWidth\n            label=\"Message\"\n            multiline\n            rows={4}\n            value={emailContent.message}\n            onChange={(e) =>\n              setEmailContent((prev) => ({ ...prev, message: e.target.value }))\n            }\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenEmailDialog(false)}>Annuler</Button>\n          <Button onClick={handleSendEmail} variant=\"contained\">\n            Envoyer\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Block Confirmation Dialog */}\n      <Dialog\n        open={openBlockDialog}\n        onClose={() => setOpenBlockDialog(false)}\n      >\n        <DialogTitle>\n          {selectedOrganizer?.isBlocked ? \"Débloquer\" : \"Bloquer\"} l'Organisateur\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Êtes-vous sûr de vouloir {selectedOrganizer?.isBlocked ? \"débloquer\" : \"bloquer\"} {selectedOrganizer?.name} ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenBlockDialog(false)}>Annuler</Button>\n          <Button \n            onClick={handleBlock} \n            variant=\"contained\"\n            sx={{\n              bgcolor: selectedOrganizer?.isBlocked ? \"#4CAF50\" : \"#FF1F44\",\n              \"&:hover\": {\n                bgcolor: selectedOrganizer?.isBlocked ? \"#43A047\" : \"#E61B3D\",\n              }\n            }}\n          >\n            Confirmer\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default ManageOrganizers; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02z\"\n}), 'Phone');"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","ManageOrganizers","openEmailDialog","setOpenEmailDialog","useState","openBlockDialog","setOpenBlockDialog","selectedOrganizer","setSelectedOrganizer","emailContent","setEmailContent","subject","message","organizers","setOrganizers","id","name","logo","logo1","email","phone","isBlocked","logo2","logo3","useEffect","storedOrganizers","localStorage","getItem","JSON","parse","setItem","stringify","_jsxs","Box","sx","p","ml","width","backgroundColor","minHeight","children","_jsx","Typography","variant","color","fontWeight","mb","textAlign","Grid","container","spacing","map","organizer","item","xs","Paper","elevation","display","alignItems","gap","borderRadius","transition","transform","boxShadow","border","src","alt","style","height","objectFit","flex","component","fontSize","EmailIcon","PhoneIcon","Button","startIcon","onClick","handleEmailClick","bgcolor","BlockIcon","handleBlockClick","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","label","value","onChange","e","prev","target","mt","multiline","rows","DialogActions","handleSendEmail","console","log","DialogContentText","handleBlock","updatedOrganizers","org","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","styled","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","root","React","inProps","ref","useThemeProps","className","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","clsx"],"sourceRoot":""}